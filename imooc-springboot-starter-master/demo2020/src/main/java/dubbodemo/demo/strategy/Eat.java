package dubbodemo.demo.strategy;

/**
 * @author wj
 * @date 2020/9/9 - 23:54
 *
 * 策略模式（Strategy Pattern） 又叫政策模式（Policy Pattern）,它是将定义的算法家族，分别封装起来，让他们之间相互替换，从而让算法的变化不会影响到使用算法的用户
 *
 * 可以避免多重分支的if...else ...和switch语句
 *
 * 属于行为模式
 *
 * 使用场景：
 * 1、假如系统中有很多类，而他们区别仅仅在于他们的行为不同
 * 2、一个系统需要动态地在集中算法中选择一种
 * 3、需要屏蔽算法规则
 *
 * 优点：
 * 1、策略模式符合开闭原则
 * 2、避免使用多重弄条件语句
 * 3、使用策略模式可以提高算法的保密性和安全性
 *
 * 缺点：
 * 1、客户端必须知道所有策略，并且自行解决使用哪一个策略类
 * 2、代码中会产生非常多策略类，增加维护难度
 */
public interface Eat {

    void eat();
}
